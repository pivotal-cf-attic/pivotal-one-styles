/*doc
---
title: Lists
name: lists
category: Base CSS
---
*/


/*doc
---
title: Inline List
name: list-inline
parent: lists
category: Base CSS
---

An inline list is one of the three methods for laying out content (including grids and the media block).

```haml_example
%ul.list-inline
  %li
    feep
  %li
    fop
  %li
    meep
```
*/

.list-inline {
  font-size: 0;
  > li {
    font-size: $font-size-base;
  }
}

/*doc
---
title: Ordered List
name: list-ordered
parent: lists
category: Base CSS
---


```haml_example
%ol
  %li
    feep
  %li
    fop
  %li
    meep
```
*/

/*doc
---
title: Unordered List
name: list-unordered
parent: lists
category: Base CSS
---


```haml_example
%ul
  %li
    feep
  %li
    fop
  %li
    meep
```
*/

/*doc
---
title: Unstyled List
name: list-unstyled
parent: lists
category: Base CSS
---

Places all list items on a single line with `display: inline-block;` and some light padding. The `.list-unstyled` class can be applied to either a `<ul>` or and `<ol>`.

```haml_example
%ul.list-unstyled
  %li
    feep
  %li
    fop
  %li
    meep
```
*/

/*doc
---
title: Inline Divider List
name: list-inline-divider
parent: lists
category: Base CSS
---

Places all list items on a single line with `display: inline-block;` and some light padding. The `.list-inline-divider` also adds a simple gray border.

```haml_example
%ul.list-inline-divider
  %li
    %a.type-em-1{href: "http://google.com"}
      Edit
  %li
    %a.type-em-1{href: "http://google.com"}
      Invite
```
*/

.list-inline-divider {

  @extend .list-inline;
  > li {
    border-left: $list-inline-divider-border;
    &:first-child {
      border: none;
    }
  }
}

/*doc
---
title: Breadcrumb List
name: list-breadcrumb
parent: lists
category: Base CSS
---

The `.list-breadcrumb` can be used to provide additional page navigation.

```haml_example
%ul.list-breadcrumb
  %li
    %a{href: "http://google.com"}
      Parent
  %li
    %a{href: "http://google.com"}
      Child
  %li.current
    %a
      Current Page
```
*/

.list-breadcrumb {
  @extend .list-inline;
  > li {
    font-size: 0; // TODO: remove all font-size hacks from this file when we start minifying our HTML
    a{
      font-size: $font-size-base;
    }
    padding-left: 0;
    padding-right: 0;
    &:before {
      font-size: $font-size-base;
      content: ">";
      padding-right: 5px;
      padding-left: 5px;
    }
    &:first-child:before {
      content: "";
    }
  }
}

/*doc
---
title: List Group
name: list-group
parent: lists
category: Base CSS
---

Use this list when you need simple gray borders between items

```haml_example
%ul.list-group
  %li.list-group-item
    item 1
  %li.list-group-item
    item 2
  %li.list-group-item
    item 3
```
*/

.list-group {
  &, > li {
    border-width: 1px 0;
  }
}

.list-group-item {
  background-color: transparent; //bootstrap override
  padding-right: 0; //bootstrap override
}

/*doc
---
title: Vertical Divider List
name: list-vertical-divider
parent: lists
category: Base CSS
---

Use this list when you need larger gray borders between
items. It should be used in concert with grid column
sizes when you want the items to take a particular width.

We achieve equal height columns using the padding/margin hack,
so we need an additional `.height-enforcer` element to get the
right min-height.

```haml_example
%ul.list-vertical-divider
  %li.col-md-8
    .height-enforcer
      item 1
  %li.col-md-8
    .height-enforcer
      item 2
  %li.col-md-8
    .height-enforcer{style: 'height: 200px'}
      item 3, which is taller
```

```haml_example
%ul.list-vertical-divider-2
  %li.col-md-8
    .height-enforcer
      item 1
  %li.col-md-8
    .height-enforcer
      item 2
  %li.col-md-8
    .height-enforcer{style: 'height: 200px'}
      item 3, which is taller
```
*/

.list-vertical-divider {
  @extend .list-inline-divider;
  @include clearfix-me(micro);

  overflow: hidden;

  > li {
    border-left: $list-vertical-divider-border;
    padding-bottom: 9000px;
    margin-bottom: -9000px;

    .height-enforcer {
      min-height: 130px;
    }
  }
}

.list-vertical-divider-2 {
  @extend .list-vertical-divider;
  margin-bottom: 40px;
  > li {
    border-left: $divider-lowlight-border;
    padding-left: 30px;
    padding-right: 30px;
  }
  >li:first-child {
    padding-left: 30px;
  }
}

/*doc
---
title: Steps List
name: list-steps
parent: lists
category: Base CSS
---

Use this list when you need to show the steps in a flow.

```haml_example
%ol.list-steps
  %li
    Sign up Account
  %li.current
    Create Organization
  %li
    Do other things
  %li
    And more things

```
*/

.list-steps {
  @extend .list-inline;
  > li {
    font-size: 18px;
    color: $list-steps-color;
    margin-right: 45px;
    padding-left: 0; // overrides .list-inline styles
    margin-bottom: 5px;
    counter-increment: list-steps;
    &:before {
      content: counter(list-steps, decimal-leading-zero);

      display: block;
      padding: 3px 7px;
      text-align: center;

      display: inline-block;
      border: 2px solid $list-steps-color;
      border-radius: 30px; // set to be higher than required so that it will work with larger fonts/paddings.
    }
    &.current {
      color: $list-steps-color-current;
      &:before {
        border-color: $list-steps-color-current;
      }
    }
  }
}


/*doc
---
title: List Spacing
name: list-whitespace
parent: lists
category: Base CSS
---

Most lists come with built in default spacing that should work for you. However, if you find yourself needing to modify the spacing, you should do that with list spacing classes rather than whitespace classes. A single class can be applied to the list and all direct children will be modified.
The classes are constructed by specifying `<type><location><size>`.

<table>
    <tbody><tr>
      <th scope="col" colspan="3" class="txtL"><strong>Type:</strong></th>
    </tr>
    <tr>
      <th scope="row"><code>l</code></th>
      <td>list</td>
      <td>Space on the inside of each of the li direct children of the element</td>
    </tr>
    <tr>
      <th scope="col" colspan="3" class="txtL"><strong>Location:</strong></th>
    </tr>
    <tr>
      <th scope="row"><code>h</code></th>
      <td>horizontal</td>
      <td>Adds spacing to the left and right of the <code>li</code>.</td>
    </tr>
    <tr>
      <th scope="row"><code>v</code></th>
      <td>vertical</td>
      <td>Adds spacing to the top and bottom of the <code>li</code>.</td>
    </tr>
    <tr>
      <th scope="col" colspan="3" class="txtL"><strong>Size:</strong></th>
    </tr>
    <tr>
      <th scope="row"><code>xl</code></th>
      <td>extra large</td>
      <td>Adds 21 pixels of space</td>
    </tr>
    <tr>
      <th scope="row"><code>l</code></th>
      <td>large</td>
      <td>Adds 10 pixels of space</td>
    </tr>
    <tr>
      <th scope="row"><code>m</code></th>
      <td>medium</td>
      <td>Adds 7 pixels of space</td>
    </tr>
    <tr>
      <th scope="row"><code>s</code></th>
      <td>small</td>
      <td>Adds 5 pixels of space</td>
    </tr>
    <tr>
      <th scope="row"><code>n</code></th>
      <td>none</td>
      <td>Sets any existing space to 0</td>
    </tr>
  </tbody></table>

<div class="row">
  <div class="col-md-12">

  </div>
  <div class="col-md-12">

  </div>
</div>

#### Vertical Spacing Options

##### None

```haml_example
%ul.lvn
  %li
    feep
  %li
    fop
  %li
    meep
```

##### Small

```haml_example
%ul.lvs
  %li
    feep
  %li
    fop
  %li
    meep
```

##### Medium

```haml_example
%ul.lvm
  %li
    feep
  %li
    fop
  %li
    meep
```

##### Large

```haml_example
%ul.lvl
  %li
    feep
  %li
    fop
  %li
    meep
```

#### Horizontal Spacing Options

##### None

```haml_example
%ul.list-inline.lhn
  %li
    feep
  %li
    fop
  %li
    meep
```

##### Small

```haml_example
%ul.list-inline.lhs
  %li
    feep
  %li
    fop
  %li
    meep
```

##### Medium

```haml_example
%ul.list-inline.lhm
  %li
    feep
  %li
    fop
  %li
    meep
```

##### Large

```haml_example
%ul.list-inline.lhl
  %li
    feep
  %li
    fop
  %li
    meep
```

*/




@include ooListWhitespace();
